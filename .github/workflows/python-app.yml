# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  schedule:
    - cron: '5 12 * * *'
  workflow_dispatch:

permissions:
  contents: write
  
env:
  TIMEOUT: 30
  HIDE_DOMAIN: ${{ secrets.HIDE_DOMAIN }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        sudo apt-get install libegl1 libopengl0
        sudo -v && wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin
    - name: Add executable flag to mobitool
      run: |
        chmod +x wisecreator/third_party/mobitool-linux-x86_64
    - name: Run the code
      run: |
        python dailyReading.py
    - name: Check last commit message
      id: check_last_commit_message_step
      run: |
        echo 'commit_message<<EOF' >> $GITHUB_OUTPUT
        git log -1 --pretty=format:%B >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT
    - name: Set commit message
      id: set_commit_message_step
      run: |
        echo 'commit_message<<EOF' >> $GITHUB_OUTPUT
        cat commit_message >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT
    - run: rm -rf commit_message
    - uses: stefanzweifel/git-auto-commit-action@v4
      if: ${{ steps.set_commit_message_step.outputs.commit_message != steps.check_last_commit_message_step.outputs.commit_message }}
      id: commit
      with:
        commit_message: ${{ steps.commit_message_step.outputs.commit_message }}
        commit_user_name: ${{ vars.COMMIT_USER_NAME }}
        commit_user_email: ${{ vars.COMMIT_USER_EMAIL }}
        file_pattern: 'blinks'
